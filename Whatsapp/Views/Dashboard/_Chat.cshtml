@{
    Layout = "_LayoutNull";
    var chat = ViewBag.Chat as Whatsapp.API.Models.Chat;
    var clientes = ViewBag.Clientes as List<Whatsapp.Data.MainModels.Cliente>;
    var chatid = "";
    var isTicket = ViewBag.IsTicket as bool?;
    chatid = chat.ID;

    var ticket = isTicket.ToString();

}
<div class="content-wrapper container-xxl p-0">
    <div class="content-header row">
    </div>
    <div class="content-body">
        <div class="body-content-overlay"></div>
        <!-- Main chat area -->
        <section class="chat-app-window">
            <!-- Active Chat -->
            <div class="active-chat">
                <!-- Chat Header -->
                <div class="chat-navbar">
                    <header class="chat-header">
                        <div class="d-flex align-items-center">
                            <div class="sidebar-toggle d-block d-lg-none me-1">
                                <i data-feather="menu" class="font-medium-5"></i>
                            </div>
                            <div class="avatar avatar-border user-profile-toggle m-0 me-1">
                                <img src="@chat.ImagemContato" alt="avatar" height="36" width="36" />
                                @*<span class="avatar-status-busy"></span>*@
                            </div>
                            <h6 class="mb-0">@chat.NomeContato</h6>
                        </div>
                        <div class="d-flex align-items-center">
                            @if (ticket == "True")
                            {

                                <div class="dropdown">
                                    <button class="btn-icon btn btn-transparent hide-arrow btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i data-feather="more-vertical" id="chat-header-actions" class="font-medium-2"></i>
                                    </button>
                                    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="chat-header-actions">
                                        <a class="dropdown-item" onclick="Encerrar()" href="javascript:(0)">Encerrar Ticket</a>
                                    </div>
                                </div>
                            }
                        </div>
                    </header>
                </div>
                <!--/ Chat Header -->
                <!-- User Chat messages -->
                <div class="user-chats" id="ChatMensagens">
                </div>
                <!-- User Chat messages -->
                <!-- Submit Chat form -->

                @await Component.InvokeAsync("EnviarMensagem", new { ID = chat.ID })
                <!--/ Submit Chat form -->
            </div>
            <!--/ Active Chat -->
        </section>
        <!--/ Main chat area -->
        <!-- User Chat profile right area -->
        <div class="user-profile-sidebar">
            <header class="user-profile-header">
                <span class="close-icon">
                    <i data-feather="x"></i>
                </span>
                <!-- User Profile image with name -->
                <div class="header-profile-sidebar">
                    <div class="avatar box-shadow-1 avatar-border avatar-xl">
                        <img src="@chat.ImagemContato" alt="user_avatar" height="70" width="70" />
                        @*<span class="avatar-status-busy avatar-status-lg"></span>*@
                    </div>
                    <h4 class="chat-user-name">@chat.NomeContato</h4>
                    <span class="user-post">@chat.NumeroContato</span>
                </div>
                <!--/ User Profile image with name -->
            </header>
            <div class="user-profile-sidebar-area">
                <!-- About User -->
                <h6 class="section-label mb-1">Tickets em Andamento (0)</h6>
                <p>Nenhum ticket aberto.</p>
                <!-- About User -->
                <!-- User's personal information -->
                <div class="personal-info">
                    <h6 class="section-label mb-1 mt-3">Informações do Cliente</h6>
                    @{
                        if (clientes.Where(p => p.Telefone == chat.NumeroContato).Count() == 0)
                        {
                            <p>Cliente não adicionado</p>
                        }
                        else
                        {
                            var cliente = clientes.First(p => p.Telefone == chat.NumeroContato);
                            <ul class="list-unstyled">
                                <li class="mb-1">
                                    <i data-feather="mail" class="font-medium-2 me-50"></i>
                                    <span class="align-middle">@cliente.Observacao</span>
                                </li>
                                <li class="mb-1">
                                    <i data-feather="phone-call" class="font-medium-2 me-50"></i>
                                    <span class="align-middle">@chat.NumeroContato</span>
                                </li>
                                <li>
                                    <i data-feather="clock" class="font-medium-2 me-50"></i>
                                    <span class="align-middle">@cliente.UltimoTicket.ToString()</span>
                                </li>
                            </ul>
                        }

                    }

                </div>
                <!--/ User's personal information -->
                <!-- User's Links -->
                <div class="more-options">
                    <h6 class="section-label mb-1 mt-3">Opções Rápidas</h6>
                    <ul class="list-unstyled">
                        @{
                            if (clientes.Where(p => p.Telefone == chat.NumeroContato).Count() == 0)
                            {
                                <li class="cursor-pointer mb-1">
                                    <a href="@Url.Action("AdicionarCliente","Dashboard", new { ID = chat.ID })">
                                        <i data-feather="tag" class="font-medium-2 me-50"></i>
                                        <span class="align-middle">Adicionar Cliente</span>
                                    </a>
                                </li>
                            }
                            else
                            {
                                var cliente = clientes.First(p => p.Telefone == chat.NumeroContato);
                                <li class="cursor-pointer mb-1">
                                    <a href="@Url.Action("RemoverCliente","Dashboard", new { ID = cliente.ID })">

                                        <i data-feather="trash" class="font-medium-2 me-50"></i>
                                        <span class="align-middle">Remover Cliente</span>
                                    </a>
                                </li>
                            }
                        }
                    </ul>
                </div>
                <!--/ User's Links -->
            </div>
        </div>
        <!--/ User Chat profile right area -->

    </div>
</div>

<script>

    function Encerrar() {
        bootbox.confirm({
            message: 'Confirma o encerramento do ticket?',
            callback: function (confirmacao) {

                if (confirmacao) {

                    $.ajax({
                        'type': 'get',
                        'contentType': 'text/plain',
                        'url': '/Ticket/EncerrarTicket?ID=@chatid',
                        'dataType': 'html',
                    }).done(function (data) {

                        bootbox.alert('Ticket encerrado com sucesso.');
                        window.location.href = "/Dashboard/Whatsapp";
                    }).fail(function (error) {
                        bootbox.alert('Operação cancelada.');
                    });
                }
                else {

                    bootbox.alert('Operação cancelada.');
                }

            },
            buttons: {
                cancel: { label: 'Cancelar', className: 'btn-default' },
                confirm: { label: 'EXCLUIR', className: 'btn-danger' }

            }
        });
    }


    var firstOpen = true;
    var refreshTimer = setInterval(function () { atualizarChat() }, 1000);

    var lastdata = "";
    function atualizarChat() {
        $.ajax({
            'type': 'get',
            'contentType': 'text/plain',
            'url': '/Dashboard/ChatMensagens?ID=@chatid&Ticket=@ticket',
            'dataType': 'html',
        }).done(function (data) {
            if (data != lastdata) {
                lastdata = data;
                $('#ChatMensagens').html(data);

                if (firstOpen === false) {

                    var audio = new Audio('/WhatsApp.mp3');
                    audio.play();
                } else { firstOpen = false;}

                setTimeout(function () {
                    document.getElementsByClassName('user-chats')[0].scrollTo(0, document.getElementsByClassName('user-chats')[0].scrollHeight);
                }, 500);
            }
           //timeout = setTimeout(atualizarChat, 1000);
        }).fail(function (error) {
            console.log(error);
        });

    } atualizarChat();
</script>
